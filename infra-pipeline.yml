AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless everest-ai AWS Lambda, API Gateway, CodeBuild, CodePipeline, ECR and S3 

Parameters:
  GitHubOwner:
    Type: AWS::SSM::Parameter::Value<String>
    Default: rishi-7span
    Description: SSM parameter path for GitHub repository owner (username/org)
  GitHubRepo:
    Type: AWS::SSM::Parameter::Value<String>
    Default: everest-ai-deployment
    Description: SSM parameter path for GitHub repository name
  GitHubBranch:
    Type: String
    Default: staging
    Description: SSM parameter path for GitHub branch to build from
  LambdaMemorySize:
    Type: Number
    Default: 512
  LambdaEphemeralStorage:
    Type: Number
    Default: 1024
  CodeBuildComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
  GitHubOAuthToken:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/GITHUB_OAUTH_TOKEN
    Description: SSM parameter path for GitHub OAuth token (Personal Access Token)
  DebugParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/DEBUG
    Description: SSM parameter path for env DEBUG
  LLMEmbeddingModelParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/LLM_EMBEDDING_MODEL
    Description: SSM parameter path for env LLM_EMBEDDING_MODEL
  LLMModelParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/LLM_MODEL
    Description: SSM parameter path for env LLM_MODEL
  LLMProviderParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/LLM_PROVIDER
    Description: SSM parameter path for env LLM_PROVIDER
  LLMApiKeyParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/RESUME_LLM_API_KEY
    Description: SSM parameter path for env LLM_API_KEY
  ResumeChunkOverlapParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/RESUME_CHUNK_OVERLAP
    Description: SSM parameter path for env RESUME_CHUNK_OVERLAP
  ResumeChunkSizeParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/RESUME_CHUNK_SIZE
    Description: SSM parameter path for env RESUME_CHUNK_SIZE
  ResumeQdrantApiKeyParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/RESUME_QDRANT_API_KEY
    Description: SSM parameter path for env RESUME_QDRANT_API_KEY
  ResumeQdrantCollectionNameParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/RESUME_QDRANT_COLLECTION_NAME
    Description: SSM parameter path for env RESUME_QDRANT_COLLECTION_NAME
  ResumeQdrantUrlParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/RESUME_QDRANT_URL
    Description: SSM parameter path for env RESUME_QDRANT_URL
  ProjectLlmApiKeyParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/PROJECT_LLM_API_KEY
    Description: SSM parameter path for env PROJECT_LLM_API_KEY
  ProjectQdrantApiKeyParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/PROJECT_QDRANT_API_KEY
    Description: SSM parameter path for env PROJECT_QDRANT_API_KEY
  ProjectQdrantUrlParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/PROJECT_QDRANT_URL
    Description: SSM parameter path for env PROJECT_QDRANT_URL
  ProjectCollectionParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/PROJECT_COLLECTION
    Description: SSM parameter path for env PROJECT_COLLECTION
  ProjectChunkSizeParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/PROJECT_CHUNK_SIZE
    Description: SSM parameter path for env PROJECT_CHUNK_SIZE
  ProjectChunkOverlapParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/PROJECT_CHUNK_OVERLAP
    Description: SSM parameter path for env PROJECT_CHUNK_OVERLAP
  EmbeddingDimensionParam:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/EMBEDDING_DIMENSION
    Description: SSM parameter path for env EMBEDDING_DIMENSION
  EcrImageUri:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/develop/ECR_REPOSITORY_URI
    Description: SSM parameter path for ECR Image URI for Lambda and CodeBuild
  EcrImageBuildName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/ECR_IMAGE_BUILD_NAME
    Description: SSM parameter path for ECR Image Build Name
  EcrImageBuildNameLambda:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /everest-ai/ECR_IMAGE_URI_BUILD_LAMBDA
    Description: SSM parameter path for ECR Image Build Name
  Environment:
    Type: String
    Default: develop
    Description: Environment name (e.g., dev, staging, prod) used for resource naming

Resources:
  ArtifactStore:
    Type: AWS::S3::Bucket

  EverestAiLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'everest-ai-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:GetObject
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:SetRepositoryPolicy
                  - ecr:GetRepositoryPolicy
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:DescribeImages
                Resource: "*"
      Tags:
        - Key: Service
          Value: Lambda

  EverestAiCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'everest-ai-codebuild-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                  - s3:*
                  - codebuild:*
                  - codepipeline:*
                  - lambda:GetFunction
                  - lambda:UpdateFunctionCode
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  - iam:PassRole
                Resource: "*"
      Tags:
        - Key: Service
          Value: CodeBuild

  EverestAiCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'everest-ai-codepipeline-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                  - iam:PassRole
                  - lambda:GetFunction
                  - lambda:UpdateFunctionCode
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - lambda:UpdateFunctionConfiguration
                  - lambda:UpdateAlias
                  - lambda:PublishVersion
                  - lambda:ListAliases
                  - lambda:GetAlias
                  - lambda:GetFunctionConfiguration
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:GetAuthorizationToken
                  - iam:TagRole
                  - iam:UntagRole
                Resource: "*"
      Tags:
        - Key: Service
          Value: CodePipeline

  EverestAiCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'everest-ai-${Environment}'
      Description: CodeBuild project for everest-ai Lambda deployment
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: !Ref CodeBuildComputeType
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref "AWS::Region"
          - Name: LAMBDA_FUNCTION_NAME
            Value: !Ref EverestAiLambda
          - Name: ECR_REPOSITORY_URI
            Value: !Ref EcrImageUri
          - Name: ECR_IMAGE_BUILD_NAME
            Value: !Ref EcrImageBuildName
      ServiceRole: !GetAtt EverestAiCodeBuildRole.Arn

  EverestAiLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'everest-ai-lambda-${Environment}'
      Role: !GetAtt EverestAiLambdaRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Ref EcrImageBuildNameLambda
      Timeout: 10
      MemorySize: !Ref LambdaMemorySize
      EphemeralStorage:
        Size: !Ref LambdaEphemeralStorage
      Environment:
        Variables:
          DEBUG: !Ref DebugParam
          RESUME_LLM_API_KEY: !Ref LLMApiKeyParam
          LLM_EMBEDDING_MODEL: !Ref LLMEmbeddingModelParam
          LLM_MODEL: !Ref LLMModelParam
          LLM_PROVIDER: !Ref LLMProviderParam
          RESUME_CHUNK_OVERLAP: !Ref ResumeChunkOverlapParam
          RESUME_CHUNK_SIZE: !Ref ResumeChunkSizeParam
          RESUME_QDRANT_API_KEY: !Ref ResumeQdrantApiKeyParam
          RESUME_QDRANT_COLLECTION_NAME: !Ref ResumeQdrantCollectionNameParam
          RESUME_QDRANT_URL: !Ref ResumeQdrantUrlParam
          PROJECT_LLM_API_KEY: !Ref ProjectLlmApiKeyParam
          PROJECT_QDRANT_API_KEY: !Ref ProjectQdrantApiKeyParam
          PROJECT_QDRANT_URL: !Ref ProjectQdrantUrlParam
          PROJECT_COLLECTION: !Ref ProjectCollectionParam
          PROJECT_CHUNK_SIZE: !Ref ProjectChunkSizeParam
          PROJECT_CHUNK_OVERLAP: !Ref ProjectChunkOverlapParam
          EMBEDDING_DIMENSION: !Ref EmbeddingDimensionParam

  EverestAiLambdaAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref EverestAiLambda
      Name: !Sub 'everest-ai-live-${Environment}'
      FunctionVersion: $LATEST

  EverestAiRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub 'everest-ai-${Environment}'

  EverestAiProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref EverestAiRestApi
      ParentId: !GetAtt EverestAiRestApi.RootResourceId
      PathPart: '{proxy+}'

  EverestAiProxyAnyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref EverestAiRestApi
      ResourceId: !Ref EverestAiProxyResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EverestAiLambda.Arn}/invocations

  EverestAiLambdaApiInvokePermissionProxy:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref EverestAiLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${EverestAiRestApi}/*/*/*

  EverestAiApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - EverestAiProxyAnyMethod
    Properties:
      RestApiId: !Ref EverestAiRestApi
      StageName: ai
      Description: !Sub 'Deployment for everest-ai API Gateway (${Environment})'

  EverestAiPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt EverestAiCodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore
      Name: !Sub 'everest-ai-pipeline-${Environment}'
      Stages:
        - Name: Source
          Actions:
            - Name: everest-ai-source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: everest-ai-SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: everest-ai-build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: everest-ai-SourceOutput
              OutputArtifacts:
                - Name: everest-ai-BuildOutput
              Configuration:
                ProjectName: !Ref EverestAiCodeBuildProject
              RunOrder: 1

  EverestAiPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Name: !Sub 'everest-ai-github-webhook-${Environment}'
      TargetPipeline: !Ref EverestAiPipeline
      TargetPipelineVersion: !GetAtt EverestAiPipeline.Version
      TargetAction: everest-ai-source
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/{Branch}"
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: true

Outputs:
  ApiEndpoint:
    Description: "API Gateway Endpoint"
    Value: !Sub "https://${EverestAiRestApi}.execute-api.${AWS::Region}.amazonaws.com/ai"
  # LambdaFunctionUrl:
  #   Description: "Lambda Function URL"
  #   Value: !GetAtt EverestAiLambdaUrl.FunctionUrl